{"version":3,"sources":["constants/routes.js","constants/history.js","components/SignOut/index.js","components/Navigation/index.js","components/Session/queries.js","components/Session/withSession.js","components/Landing/Table.js","components/FacultyList/queries.js","components/FacultyList/index.js","components/Landing/queries.js","components/Landing/index.js","components/Error/index.js","components/SignIn/index.js","components/Table/queries.js","components/Table/index.js","components/Account/queries.js","components/Account/index.js","components/Session/withAuthorization.js","components/App/index.js","index.js"],"names":["LANDING","createHistory","signOut","client","localStorage","removeItem","resetStore","history","push","SignOutButton","react_default","a","createElement","react_apollo_esm","DropdownItem","onClick","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","color","light","expand","NavbarBrand","Link","to","NavbarToggler","Collapse","navbar","Nav","className","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","session","me","role","react","divider","SignOut","Component","GET_ME","gql","_templateObject","withSession","query","_ref","data","refetch","assign","TableComponent","faculty","Badge","pill","name","Table","responsive","hover","departments","map","department","index","key","id","scope","keys","concat","toUpperCase","slice","DEPARTMENT_UPDATED","queries_templateObject","FacultyList","subscribeToMore","document","queries","updateQuery","previousResult","subscriptionData","faculties","Landing_Table","GET_STATS","Landing_queries_templateObject","Jumbotron","loading","Spinner","edges","FacultyList_FacultyList","ErrorMessage","error","message","SIGN_IN","SignIn_templateObject","INITIAL_STATE","login","password","SignInForm","onChange","event","_event$target","target","value","defineProperty","onSubmit","signIn","then","_ref3","asyncToGenerator","regenerator_default","mark","_callee","_ref2","wrap","_context","prev","next","objectSpread","setItem","token","routes","stop","_x","apply","arguments","preventDefault","_this2","_this$state","isInvalid","length","isEmail","mutation","variables","_ref4","Form","Row","form","Col","md","lg","size","offset","FormGroup","Label","for","Input","type","placeholder","Button","disabled","Error","withRouter","SignIn_SignInForm","UP_PLACE","Table_queries_templateObject","DOWN_PLACE","_templateObject2","upPlace","upPlaceMutation","sent","_x2","downPlace","_callee2","downPlaceMutation","_context2","abrupt","_x3","_x4","_x5","toConsumableArray","attribute","_ref5","index_es","_ref6","Account_queries_templateObject","withAuthorization","conditionFn","networkStatus","Redirect","components_Table_TableComponent","BrowserRouter","basename","Navigation_Navigation","Route","exact","path","component","components_Landing","SignIn","components_Account","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","_getMainDefinition","getMainDefinition","kind","operation","authLink","ApolloLink","forward","setContext","_ref2$headers","headers","getItem","x-token","errorLink","onError","graphQLErrors","networkError","forEach","locations","console","log","statusCode","link","from","cache","InMemoryCache","ApolloClient","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.189ce2e4.chunk.js","sourcesContent":["export const LANDING = '/'\nexport const SIGN_IN = '/login'\nexport const ACCOUNT = '/account'\n","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","import React from 'react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { DropdownItem } from 'reactstrap'\n\nimport * as routes from '../../constants/routes'\nimport history from '../../constants/history'\n\nconst SignOutButton = () => (\n  <ApolloConsumer>\n    {client => (\n      <DropdownItem onClick={() => signOut(client)}>\n        Sign Out\n      </DropdownItem>\n    )}\n  </ApolloConsumer>\n)\n\nconst signOut = client => {\n  localStorage.removeItem('token')\n  client.resetStore()\n  history.push(routes.SIGN_IN)\n}\n\nexport { signOut }\n\nexport default SignOutButton\n","import React, { Component, Fragment } from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\n\nimport SignOut from '../SignOut'\nimport { Link } from 'react-router-dom'\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>\n            <Link to=\"/\">upis</Link>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret />\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <Link to=\"/\">Faculties</Link>\n                  </DropdownItem>\n\n                  {this.props.session &&\n                  this.props.session.me &&\n                  this.props.session.me.role === 'ADMIN' ? (\n                    <Fragment>\n                      <DropdownItem>\n                        <Link to=\"/account\">Profile</Link>\n                      </DropdownItem>\n\n                      <DropdownItem divider />\n                      <DropdownItem>\n                        <SignOut>Log Out</SignOut>\n                      </DropdownItem>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <DropdownItem>\n                        <Link to=\"/login\">Login</Link>\n                      </DropdownItem>\n                    </Fragment>\n                  )}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n      faculty {\n        id\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { GET_ME } from './queries'\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n)\n\nexport default withSession\n","import React from 'react'\nimport { Badge, Table } from 'reactstrap'\n\nconst TableComponent = ({ faculty }) => (\n  <div>\n    <Badge color=\"primary\" pill>\n      {faculty.name}\n    </Badge>\n    <Table responsive hover>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Department</th>\n          <th>Total</th>\n          <th>Budget</th>\n          <th>Self-financing</th>\n        </tr>\n      </thead>\n      <tbody>\n        {faculty.departments.map((department, index) => {\n          return (\n            <tr key={department.id}>\n              <th scope=\"row\">{index + 1}</th>\n              {Object.keys(department).map(key => {\n                switch (key) {\n                  case 'name':\n                  case 'total':\n                    return (\n                      <td\n                        key={key}\n                        className={`department${key[0].toUpperCase()}${key.slice(\n                          1,\n                        )}`}\n                      >\n                        {department[key]}\n                      </td>\n                    )\n                  case 'budget':\n                  case 'selfFinancing':\n                    return (\n                      <td\n                        key={key}\n                        className={`department${key[0].toUpperCase()}${key.slice(\n                          1,\n                        )}`}\n                      >\n                        {department[key]}\n                      </td>\n                    )\n                  default:\n                    return ''\n                }\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </Table>\n  </div>\n)\n\nexport default TableComponent\n","import gql from 'graphql-tag'\n\nexport const DEPARTMENT_UPDATED = gql`\n  subscription {\n    departmentUpdated {\n      department {\n        id\n        name\n        total\n        budget\n        selfFinancing\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport Table from '../Landing/Table'\n\nimport * as queries from './queries'\n\nexport default class FacultyList extends Component {\n  subscribeToMore = () => {\n    this.props.subscribeToMore({\n      document: queries.DEPARTMENT_UPDATED,\n      updateQuery: (previousResult, { subscriptionData }) => {\n        if (!subscriptionData.data) {\n          return previousResult\n        }\n\n        // const { departmentUpdated } = subscriptionData.data\n\n        return previousResult\n      },\n    })\n  }\n\n  componentDidMount() {\n    this.subscribeToMore()\n  }\n\n  render() {\n    const { faculties } = this.props\n\n    return faculties.map(faculty => (\n      <Table key={faculty.id} faculty={faculty} />\n    ))\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_STATS = gql`\n  query {\n    faculties {\n      edges {\n        name\n        departments {\n          id\n          name\n          total\n          budget\n          selfFinancing\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Jumbotron, Spinner } from 'reactstrap'\nimport { Query } from 'react-apollo'\n\nimport withSession from '../Session/withSession'\n\nimport FacultyList from '../FacultyList'\nimport * as queries from './queries'\n\nconst Landing = () => (\n  <div>\n    <Jumbotron>\n      <Query query={queries.GET_STATS}>\n        {({ data, loading, subscribeToMore }) => {\n          const { faculties } = data\n\n          if (loading || !faculties) {\n            return (\n              <div>\n                <Spinner color=\"primary\" />\n              </div>\n            )\n          }\n\n          const { edges } = faculties\n\n          return (\n            <Fragment>\n              <FacultyList\n                faculties={edges}\n                subscribeToMore={subscribeToMore}\n              />\n            </Fragment>\n          )\n        }}\n      </Query>\n    </Jumbotron>\n  </div>\n)\n\nexport default withSession(Landing)\n","import React from 'react'\n\nconst ErrorMessage = ({ error }) => (\n  <div>\n    <small>{error.message}</small>\n  </div>\n)\n\nexport default ErrorMessage\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { isEmail } from 'validator'\n\nimport * as routes from '../../constants/routes'\nimport ErrorMessage from '../Error'\n\nimport {\n  Jumbotron,\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap'\n\nconst SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`\n\nconst SignInPage = ({ history, refetch }) => (\n  <div>\n    <Jumbotron>\n      <h1 className=\"display-3 text-center\">Login</h1>\n      <SignInForm history={history} refetch={refetch} />\n    </Jumbotron>\n  </div>\n)\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n}\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE }\n\n  onChange = event => {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  onSubmit = (event, signIn) => {\n    signIn().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE })\n\n      localStorage.setItem('token', data.signIn.token)\n\n      await this.props.refetch()\n\n      this.props.history.push(routes.LANDING)\n    })\n\n    event.preventDefault()\n  }\n\n  render() {\n    const { login, password } = this.state\n\n    const isInvalid = password.length < 7 || !isEmail(login)\n\n    return (\n      <Mutation mutation={SIGN_IN} variables={{ login, password }}>\n        {(signIn, { data, loading, error }) => (\n          <Form onSubmit={event => this.onSubmit(event, signIn)}>\n            <Row form>\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <FormGroup>\n                  <Label for=\"userEmail\">Email</Label>\n                  <Input\n                    name=\"login\"\n                    value={login}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    id=\"userEmail\"\n                    placeholder=\"Email or Username\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <Label for=\"userPassword\">Password</Label>\n                <Input\n                  name=\"password\"\n                  value={password}\n                  onChange={this.onChange}\n                  type=\"password\"\n                  id=\"userPassword\"\n                  placeholder=\"Password\"\n                />\n              </Col>\n\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <p className=\"lead\">\n                  <Button\n                    disabled={isInvalid || loading}\n                    type=\"submit\"\n                  >\n                    Sign In\n                  </Button>\n                </p>\n              </Col>\n              {error && <ErrorMessage error={error} />}\n            </Row>\n          </Form>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default withRouter(SignInPage)\n\nexport { SignInForm }\n","import gql from 'graphql-tag'\n\nexport const UP_PLACE = gql`\n  mutation($id: ID!, $attribute: String!) {\n    upPlace(id: $id, attribute: $attribute) {\n      id\n      name\n      total\n      budget\n      selfFinancing\n    }\n  }\n`\n\nexport const DOWN_PLACE = gql`\n  mutation($id: ID!, $attribute: String!) {\n    downPlace(id: $id, attribute: $attribute) {\n      id\n      name\n      total\n      budget\n      selfFinancing\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { Badge, Table } from 'reactstrap'\nimport { Mutation } from 'react-apollo'\n\nimport { ArrowDropUp, ArrowDropDown } from '@material-ui/icons'\n\nimport * as queries from './queries'\n\nexport default class TableComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      departments: [...this.props.faculty.departments],\n    }\n  }\n\n  upPlace = async (index, upPlaceMutation) => {\n    const { data } = await upPlaceMutation()\n    const { upPlace } = data\n\n    const { departments } = this.state\n\n    departments[index] = { ...upPlace }\n\n    this.setState({ departments })\n  }\n\n  downPlace = async (index, key, downPlaceMutation) => {\n    const { departments } = this.state\n    if (departments[index][key] <= 0) return\n\n    const { data } = await downPlaceMutation()\n    const { downPlace } = data\n\n    departments[index] = { ...downPlace }\n\n    this.setState({ departments })\n  }\n\n  render() {\n    return (\n      <div>\n        <Badge color=\"primary\" pill>\n          {this.props.faculty.name}\n        </Badge>\n        <Table responsive hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Department</th>\n              <th>Total</th>\n              <th>Budget</th>\n              <th>Self-financing</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.faculty.departments.map(\n              (department, index) => {\n                return (\n                  <tr key={department.id}>\n                    <th scope=\"row\">{index + 1}</th>\n                    {Object.keys(department).map(key => {\n                      switch (key) {\n                        case 'name':\n                        case 'total':\n                          return (\n                            <td\n                              key={key}\n                              className={`department${key[0].toUpperCase()}${key.slice(\n                                1,\n                              )}`}\n                            >\n                              {this.state.departments[index][key]}\n                            </td>\n                          )\n                        case 'budget':\n                        case 'selfFinancing':\n                          return (\n                            <td\n                              key={key}\n                              className={`department${key[0].toUpperCase()}${key.slice(\n                                1,\n                              )}`}\n                            >\n                              {this.props.session &&\n                              this.props.session.me ? (\n                                <Mutation\n                                  mutation={queries.UP_PLACE}\n                                  variables={{\n                                    id: department.id,\n                                    attribute: key,\n                                  }}\n                                >\n                                  {(\n                                    upPlaceMutation,\n                                    { data, loading, error },\n                                  ) => (\n                                    <ArrowDropUp\n                                      onClick={() =>\n                                        this.upPlace(\n                                          index,\n                                          upPlaceMutation,\n                                        )\n                                      }\n                                    />\n                                  )}\n                                </Mutation>\n                              ) : (\n                                ''\n                              )}\n\n                              {this.state.departments[index][key]}\n\n                              {this.props.session &&\n                              this.props.session.me ? (\n                                <Mutation\n                                  mutation={queries.DOWN_PLACE}\n                                  variables={{\n                                    id: department.id,\n                                    attribute: key,\n                                  }}\n                                >\n                                  {(\n                                    downPlaceMutation,\n                                    { data, loading, error },\n                                  ) => (\n                                    <ArrowDropDown\n                                      onClick={() =>\n                                        this.downPlace(\n                                          index,\n                                          key,\n                                          downPlaceMutation,\n                                        )\n                                      }\n                                    />\n                                  )}\n                                </Mutation>\n                              ) : (\n                                ''\n                              )}\n                            </td>\n                          )\n                        default:\n                          return ''\n                      }\n                    })}\n                  </tr>\n                )\n              },\n            )}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_STATS = gql`\n  query($id: ID!) {\n    faculty(id: $id) {\n      name\n      departments {\n        id\n        name\n        total\n        budget\n        selfFinancing\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Spinner } from 'reactstrap'\nimport { Query } from 'react-apollo'\n\nimport Table from '../Table'\nimport * as queries from './queries'\n\nimport withAuthorization from '../Session/withAuthorization'\n\nconst Account = ({ session }) => (\n  <div>\n    <Query\n      query={queries.GET_STATS}\n      variables={{ id: session.me.faculty.id }}\n    >\n      {({ data, loading }) => {\n        const { faculty } = data\n\n        if (loading || !faculty) {\n          return (\n            <div>\n              <Spinner color=\"primary\" />\n            </div>\n          )\n        }\n\n        return (\n          <Fragment>\n            <Table\n              key={faculty.id}\n              session={session}\n              faculty={faculty}\n            />\n          </Fragment>\n        )\n      }}\n    </Query>\n  </div>\n)\n\nexport default withAuthorization(\n  session => session.me && session.me.role === 'ADMIN',\n)(Account)\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { Redirect } from 'react-router-dom'\n\nimport * as routes from '../../constants/routes'\nimport { GET_ME } from './queries'\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      )\n    }}\n  </Query>\n)\n\nexport default withAuthorization\n","import React from 'react'\nimport { Route, BrowserRouter } from 'react-router-dom'\n\nimport Navigation from '../Navigation'\nimport LandingPage from '../Landing'\nimport SignInPage from '../SignIn'\nimport AccountPage from '../Account'\nimport withSession from '../Session/withSession'\n\nimport * as routes from '../../constants/routes'\nimport history from '../../constants/history'\n\nconst App = ({ session, refetch }) => (\n  <BrowserRouter history={history} basename=\"/upis\">\n    <div>\n      <Navigation session={session} />\n\n      <hr />\n\n      <Route\n        exact\n        path={routes.LANDING}\n        component={() => <LandingPage />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_IN}\n        component={() => <SignInPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.ACCOUNT}\n        component={() => <AccountPage session={session} />}\n      />\n    </div>\n  </BrowserRouter>\n)\n\nexport default withSession(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { getMainDefinition } from 'apollo-utilities'\nimport { ApolloLink, split } from 'apollo-link'\nimport { HttpLink } from 'apollo-link-http'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { onError } from 'apollo-link-error'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './components/App'\nimport { signOut } from './components/SignOut'\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:8080/graphql',\n})\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:8080/graphql`,\n  options: {\n    reconnect: true,\n  },\n})\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return (\n      kind === 'OperationDefinition' && operation === 'subscription'\n    )\n  },\n  wsLink,\n  httpLink,\n)\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = localStorage.getItem('token')\n\n    if (token) {\n      headers = { ...headers, 'x-token': token }\n    }\n\n    return { headers }\n  })\n\n  return forward(operation)\n})\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message)\n\n      if (message === 'UNAUTHENTICATED') {\n        signOut(client)\n      }\n    })\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError)\n\n    if (networkError.statusCode === 401) {\n      signOut(client)\n    }\n  }\n})\n\nconst link = ApolloLink.from([authLink, errorLink, terminatingLink])\n\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({\n  link,\n  cache,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}