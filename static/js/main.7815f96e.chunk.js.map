{"version":3,"sources":["constants/history.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Faculty/Faculties/FacultyList/Table.js","components/Faculty/Faculties/FacultyList/queries.js","components/Faculty/Faculties/FacultyList/index.js","components/Faculty/Faculties/queries.js","components/Faculty/Faculties/index.js","components/Landing/index.js","components/Error/index.js","components/SignIn/queries.js","components/SignIn/index.js","components/Account/queries.js","components/Account/Table.js","components/Session/queries.js","components/Account/index.js","components/Session/withAuthorization.js","components/App/index.js","components/Session/withSession.js","index.js"],"names":["createHistory","basename","signOut","client","localStorage","removeItem","resetStore","history","push","SignOutButton","DropdownItem","onClick","Navigation","props","toggle","bind","state","isOpen","this","setState","Navbar","color","light","expand","NavbarBrand","to","NavbarToggler","Collapse","navbar","Nav","className","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","session","me","role","divider","SignOut","Component","TableComponent","faculty","Badge","pill","name","counter","Table","responsive","hover","departments","map","department","index","key","id","scope","Object","keys","toUpperCase","slice","FACULTY_UPDATED","gql","FacultyList","subscribeToMore","document","queries","updateQuery","previousResult","subscriptionData","data","facultyUpdated","faculties","edges","_","uniqBy","GET_PAGINATED_FACULTIES_WITH_DEPARTMENTS","MoreFacultiesButton","limit","pageInfo","fetchMore","children","Button","variables","cursor","endCursor","fetchMoreResult","Faculties","Jumbotron","query","loading","error","Spinner","hasNextPage","Landing","ErrorMessage","message","SIGN_IN","INITIAL_STATE","login","password","SignInForm","onChange","event","target","value","onSubmit","signIn","then","a","setItem","token","refetch","preventDefault","isInvalid","length","isEmail","mutation","Form","Row","form","Col","md","lg","size","offset","FormGroup","Label","for","Input","type","placeholder","disabled","Error","withRouter","GET_FACULTY","DOWN_PLACE","INCREMENT_COUNTER","incrementCounter","upPlaceMutation","downPlace","downPlaceMutation","facultyId","ArrowDropUp","attribute","ArrowDropDown","GET_ME","withAuthorization","conditionFn","networkStatus","withSession","exact","path","component","SignIn","httpLink","HttpLink","uri","process","REACT_APP_DEVSERVER","wsLink","WebSocketLink","REACT_APP_WS","options","reconnect","terminatingLink","split","getMainDefinition","kind","operation","authLink","ApolloLink","forward","setContext","headers","getItem","errorLink","onError","graphQLErrors","networkError","forEach","locations","console","log","statusCode","link","from","cache","InMemoryCache","ApolloClient","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7815f96e.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory({ basename: '/upis' })\n","import React from 'react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { DropdownItem } from 'reactstrap'\n\nimport * as routes from '../../constants/routes'\nimport history from '../../constants/history'\n\nconst SignOutButton = () => (\n  <ApolloConsumer>\n    {client => (\n      <DropdownItem onClick={() => signOut(client)}>\n        Sign Out\n      </DropdownItem>\n    )}\n  </ApolloConsumer>\n)\n\nconst signOut = client => {\n  localStorage.removeItem('token')\n  client.resetStore()\n  history.push(routes.SIGN_IN)\n}\n\nexport { signOut }\n\nexport default SignOutButton\n","export const LANDING = '/'\nexport const SIGN_IN = '/login'\nexport const ACCOUNT = '/account'\n","import React, { Component, Fragment } from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\n\nimport SignOut from '../SignOut'\nimport { Link } from 'react-router-dom'\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>\n            <Link to=\"/\">upis</Link>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret />\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <Link to=\"/\">Faculties</Link>\n                  </DropdownItem>\n\n                  {this.props.session &&\n                  this.props.session.me &&\n                  this.props.session.me.role === 'ADMIN' ? (\n                    <Fragment>\n                      <DropdownItem>\n                        <Link to=\"/account\">Profile</Link>\n                      </DropdownItem>\n\n                      <DropdownItem divider />\n                      <DropdownItem>\n                        <SignOut>Log Out</SignOut>\n                      </DropdownItem>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <DropdownItem>\n                        <Link to=\"/login\">Login</Link>\n                      </DropdownItem>\n                    </Fragment>\n                  )}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Badge, Table } from 'reactstrap'\n\nconst TableComponent = ({ faculty }) => (\n  <div>\n    <Badge color=\"primary\" pill>\n      {faculty.name}\n    </Badge>\n    <Badge color=\"danger\" pill>\n      {faculty.counter}\n    </Badge>\n    <Table responsive hover>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Department</th>\n          <th>Total</th>\n          <th>Budget</th>\n          <th>Self-financing</th>\n        </tr>\n      </thead>\n      <tbody>\n        {faculty.departments.map((department, index) => {\n          return (\n            <tr key={department.id}>\n              <th scope=\"row\">{index + 1}</th>\n              {Object.keys(department).map(key => {\n                switch (key) {\n                  case 'name':\n                  case 'total':\n                    return (\n                      <td\n                        key={key}\n                        className={`department${key[0].toUpperCase()}${key.slice(\n                          1,\n                        )}`}\n                      >\n                        {department[key]}\n                      </td>\n                    )\n                  case 'budget':\n                  case 'selfFinancing':\n                    return (\n                      <td\n                        key={key}\n                        className={`department${key[0].toUpperCase()}${key.slice(\n                          1,\n                        )}`}\n                      >\n                        {department[key]}\n                      </td>\n                    )\n                  default:\n                    return ''\n                }\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </Table>\n  </div>\n)\n\nexport default TableComponent\n","import gql from 'graphql-tag'\n\nexport const FACULTY_UPDATED = gql`\n  subscription {\n    facultyUpdated {\n      faculty {\n        id\n        name\n        counter\n        createdAt\n        departments {\n          id\n          name\n          total\n          budget\n          selfFinancing\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport _ from 'lodash'\n\nimport Table from './Table'\nimport * as queries from './queries'\n\nexport default class FacultyList extends Component {\n  subscribeToMore = () => {\n    this.props.subscribeToMore({\n      document: queries.FACULTY_UPDATED,\n      updateQuery: (previousResult, { subscriptionData }) => {\n        if (!subscriptionData.data) {\n          return previousResult\n        }\n\n        const { facultyUpdated } = subscriptionData.data\n\n        return {\n          ...previousResult,\n          faculties: {\n            ...previousResult.faculties,\n            edges: [\n              facultyUpdated.faculty,\n              ...previousResult.faculties.edges,\n            ],\n          },\n        }\n      },\n    })\n  }\n\n  componentDidMount() {\n    this.subscribeToMore()\n  }\n\n  render() {\n    const { faculties } = this.props\n\n    let uniqueFaculties = _.uniqBy(faculties, 'id')\n\n    return uniqueFaculties.map(faculty => (\n      <Table key={faculty.id} faculty={faculty} />\n    ))\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_PAGINATED_FACULTIES_WITH_DEPARTMENTS = gql`\n  query($cursor: String, $limit: Int!) {\n    faculties(cursor: $cursor, limit: $limit) {\n      edges {\n        id\n        name\n        counter\n        createdAt\n        departments {\n          id\n          name\n          total\n          budget\n          selfFinancing\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Jumbotron, Spinner, Button } from 'reactstrap'\nimport { Query } from 'react-apollo'\n\nimport FacultyList from './FacultyList'\nimport * as queries from './queries'\n\nconst Faculties = ({ limit }) => (\n  <div>\n    <Jumbotron>\n      <Query\n        query={queries.GET_PAGINATED_FACULTIES_WITH_DEPARTMENTS}\n        variables={{ limit }}\n      >\n        {({ data, loading, error, fetchMore, subscribeToMore }) => {\n          if (!data) {\n            return <div>Network error...</div>\n          }\n\n          const { faculties } = data\n\n          if (loading || !faculties) {\n            return (\n              <div>\n                <Spinner color=\"primary\" />\n              </div>\n            )\n          }\n\n          const { edges, pageInfo } = faculties\n\n          return (\n            <Fragment>\n              <FacultyList\n                faculties={edges}\n                subscribeToMore={subscribeToMore}\n              />\n\n              {pageInfo.hasNextPage && (\n                <MoreFacultiesButton\n                  limit={limit}\n                  pageInfo={pageInfo}\n                  fetchMore={fetchMore}\n                >\n                  More\n                </MoreFacultiesButton>\n              )}\n            </Fragment>\n          )\n        }}\n      </Query>\n    </Jumbotron>\n  </div>\n)\n\nconst MoreFacultiesButton = ({\n  limit,\n  pageInfo,\n  fetchMore,\n  children,\n}) => (\n  <Button\n    color=\"secondary\"\n    onClick={() =>\n      fetchMore({\n        variables: { cursor: pageInfo.endCursor, limit },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return previousResult\n          }\n\n          return {\n            faculties: {\n              ...fetchMoreResult.faculties,\n              edges: [\n                ...previousResult.faculties.edges,\n                ...fetchMoreResult.faculties.edges,\n              ],\n            },\n          }\n        },\n      })\n    }\n  >\n    {children}\n  </Button>\n)\n\nexport default Faculties\n","import React from 'react'\n\nimport { Faculties } from '../Faculty'\n\nconst Landing = () => (\n  <div>\n    <Faculties limit={2} />\n  </div>\n)\n\nexport default Landing\n","import React from 'react'\n\nconst ErrorMessage = ({ error }) => (\n  <div>\n    <small>{error.message}</small>\n  </div>\n)\n\nexport default ErrorMessage\n","import gql from 'graphql-tag'\n\nexport const SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Mutation } from 'react-apollo'\nimport { isEmail } from 'validator'\n\nimport * as routes from '../../constants/routes'\nimport ErrorMessage from '../Error'\n\nimport {\n  Jumbotron,\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap'\n\nimport * as queries from './queries'\n\nconst SignInPage = ({ history, refetch }) => (\n  <div>\n    <Jumbotron>\n      <h1 className=\"display-3 text-center\">Login</h1>\n      <SignInForm history={history} refetch={refetch} />\n    </Jumbotron>\n  </div>\n)\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n}\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE }\n\n  onChange = event => {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  onSubmit = (event, signIn) => {\n    signIn().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE })\n\n      localStorage.setItem('token', data.signIn.token)\n\n      await this.props.refetch()\n\n      this.props.history.push(routes.LANDING)\n    })\n\n    event.preventDefault()\n  }\n\n  render() {\n    const { login, password } = this.state\n\n    const isInvalid = password.length < 7 || !isEmail(login)\n\n    return (\n      <Mutation\n        mutation={queries.SIGN_IN}\n        variables={{ login, password }}\n      >\n        {(signIn, { data, loading, error }) => (\n          <Form onSubmit={event => this.onSubmit(event, signIn)}>\n            <Row form>\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <FormGroup>\n                  <Label for=\"userEmail\">Email</Label>\n                  <Input\n                    name=\"login\"\n                    value={login}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    id=\"userEmail\"\n                    placeholder=\"Email or Username\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <Label for=\"userPassword\">Password</Label>\n                <Input\n                  name=\"password\"\n                  value={password}\n                  onChange={this.onChange}\n                  type=\"password\"\n                  id=\"userPassword\"\n                  placeholder=\"Password\"\n                />\n              </Col>\n\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <p className=\"lead\">\n                  <Button\n                    disabled={isInvalid || loading}\n                    type=\"submit\"\n                  >\n                    Sign In\n                  </Button>\n                </p>\n              </Col>\n              {error && <ErrorMessage error={error} />}\n            </Row>\n          </Form>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default withRouter(SignInPage)\n\nexport { SignInForm }\n","import gql from 'graphql-tag'\n\nexport const GET_FACULTY = gql`\n  query($id: ID!) {\n    faculty(id: $id) {\n      id\n      name\n      counter\n      departments {\n        id\n        name\n        total\n        budget\n        selfFinancing\n      }\n    }\n  }\n`\n\n/* export const UP_PLACE = gql`\n  mutation($id: ID!, $attribute: String!, $facultyId: ID!) {\n    upPlace(id: $id, attribute: $attribute, facultyId: $facultyId) {\n      id\n      name\n      total\n      budget\n      selfFinancing\n    }\n  }\n` */\n\nexport const DOWN_PLACE = gql`\n  mutation($id: ID!, $attribute: String!, $facultyId: ID!) {\n    downPlace(id: $id, attribute: $attribute, facultyId: $facultyId) {\n      id\n      name\n      total\n      budget\n      selfFinancing\n    }\n  }\n`\n\nexport const INCREMENT_COUNTER = gql`\n  mutation($facultyId: ID!) {\n    incrementCounter(facultyId: $facultyId) {\n      id\n      name\n      counter\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { Badge, Table } from 'reactstrap'\nimport { Mutation } from 'react-apollo'\n\nimport { ArrowDropUp, ArrowDropDown } from '@material-ui/icons'\n\nimport * as queries from './queries'\n\nexport default class TableComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      counter: this.props.faculty.counter,\n      departments: [...this.props.faculty.departments],\n    }\n  }\n\n  incrementCounter = async upPlaceMutation => {\n    await upPlaceMutation()\n\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  downPlace = async (index, key, downPlaceMutation) => {\n    const { departments } = this.state\n    if (departments[index][key] <= 0) return\n\n    const { data } = await downPlaceMutation()\n    const { downPlace } = data\n\n    departments[index] = { ...downPlace }\n\n    this.setState({ departments, counter: this.state.counter + 1 })\n  }\n\n  render() {\n    return (\n      <div>\n        <Badge color=\"primary\" pill>\n          {this.props.faculty.name}\n        </Badge>\n        <Badge color=\"danger\" pill>\n          {this.state.counter}{' '}\n          {this.props.session.me ? (\n            <Mutation\n              mutation={queries.INCREMENT_COUNTER}\n              variables={{\n                facultyId: this.props.faculty.id,\n              }}\n            >\n              {(upPlaceMutation, { data, loading, error }) => (\n                <ArrowDropUp\n                  onClick={() =>\n                    this.incrementCounter(upPlaceMutation)\n                  }\n                />\n              )}\n            </Mutation>\n          ) : (\n            ''\n          )}\n        </Badge>\n        <Table responsive hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Department</th>\n              <th>Total</th>\n              <th>Budget</th>\n              <th>Self-financing</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.faculty.departments.map(\n              (department, index) => {\n                return (\n                  <tr key={department.id}>\n                    <th scope=\"row\">{index + 1}</th>\n                    {Object.keys(department).map(key => {\n                      switch (key) {\n                        case 'name':\n                        case 'total':\n                          return (\n                            <td\n                              key={key}\n                              className={`department${key[0].toUpperCase()}${key.slice(\n                                1,\n                              )}`}\n                            >\n                              {this.state.departments[index][key]}\n                            </td>\n                          )\n                        case 'budget':\n                        case 'selfFinancing':\n                          return (\n                            <td\n                              key={key}\n                              className={`department${key[0].toUpperCase()}${key.slice(\n                                1,\n                              )}`}\n                            >\n                              {/*                               {this.props.session &&\n                              this.props.session.me ? (\n                                <Mutation\n                                  mutation={queries.UP_PLACE}\n                                  variables={{\n                                    id: department.id,\n                                    attribute: key,\n                                    facultyId: this.props.faculty.id,\n                                  }}\n                                >\n                                  {(\n                                    upPlaceMutation,\n                                    { data, loading, error },\n                                  ) => (\n                                    <ArrowDropUp\n                                      onClick={() =>\n                                        this.upPlace(\n                                          index,\n                                          upPlaceMutation,\n                                        )\n                                      }\n                                    />\n                                  )}\n                                </Mutation>\n                              ) : (\n                                ''\n                              )} */}\n\n                              {this.state.departments[index][key]}\n\n                              {this.props.session &&\n                              this.props.session.me ? (\n                                <Mutation\n                                  mutation={queries.DOWN_PLACE}\n                                  variables={{\n                                    id: department.id,\n                                    attribute: key,\n                                    facultyId: this.props.faculty.id,\n                                  }}\n                                >\n                                  {(\n                                    downPlaceMutation,\n                                    { data, loading, error },\n                                  ) => (\n                                    <ArrowDropDown\n                                      onClick={() =>\n                                        this.downPlace(\n                                          index,\n                                          key,\n                                          downPlaceMutation,\n                                        )\n                                      }\n                                    />\n                                  )}\n                                </Mutation>\n                              ) : (\n                                ''\n                              )}\n                            </td>\n                          )\n                        default:\n                          return ''\n                      }\n                    })}\n                  </tr>\n                )\n              },\n            )}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n      faculty {\n        id\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Spinner } from 'reactstrap'\nimport { Query } from 'react-apollo'\n\nimport Table from './Table'\nimport * as queries from './queries'\n\nimport withAuthorization from '../Session/withAuthorization'\n\nconst Account = ({ session }) => (\n  <div>\n    <Query\n      query={queries.GET_FACULTY}\n      variables={{ id: session.me.faculty.id }}\n    >\n      {({ data, loading }) => {\n        const { faculty } = data\n\n        if (loading || !faculty) {\n          return (\n            <div>\n              <Spinner color=\"primary\" />\n            </div>\n          )\n        }\n\n        return (\n          <Fragment>\n            <Table\n              key={faculty.id}\n              session={session}\n              faculty={faculty}\n            />\n          </Fragment>\n        )\n      }}\n    </Query>\n  </div>\n)\n\nexport default withAuthorization(\n  session => session.me && session.me.role === 'ADMIN',\n)(Account)\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { Redirect } from 'react-router-dom'\n\nimport * as routes from '../../constants/routes'\nimport { GET_ME } from './queries'\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      )\n    }}\n  </Query>\n)\n\nexport default withAuthorization\n","import React from 'react'\nimport { Route, Router } from 'react-router-dom'\n\nimport Navigation from '../Navigation'\nimport LandingPage from '../Landing'\nimport SignInPage from '../SignIn'\nimport AccountPage from '../Account'\nimport withSession from '../Session/withSession'\n\nimport * as routes from '../../constants/routes'\nimport history from '../../constants/history'\n\nconst App = ({ session, refetch }) => (\n  <Router history={history}>\n    <div>\n      <Navigation session={session} />\n\n      <hr />\n\n      <Route\n        exact\n        path={routes.LANDING}\n        component={() => <LandingPage />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_IN}\n        component={() => <SignInPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.ACCOUNT}\n        component={() => <AccountPage session={session} />}\n      />\n    </div>\n  </Router>\n)\n\nexport default withSession(App)\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { GET_ME } from './queries'\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n)\n\nexport default withSession\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { getMainDefinition } from 'apollo-utilities'\nimport { ApolloLink, split } from 'apollo-link'\nimport { HttpLink } from 'apollo-link-http'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { onError } from 'apollo-link-error'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './components/App'\nimport { signOut } from './components/SignOut'\n\nconst httpLink = new HttpLink({\n  uri:\n    process.env.REACT_APP_DEVSERVER ||\n    'https://upis.herokuapp.com/graphql',\n})\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_WS || `wss://upis.herokuapp.com/graphql`,\n  options: {\n    reconnect: true,\n  },\n})\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return (\n      kind === 'OperationDefinition' && operation === 'subscription'\n    )\n  },\n  wsLink,\n  httpLink,\n)\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = localStorage.getItem('token')\n\n    if (token) {\n      headers = { ...headers, 'x-token': token }\n    }\n\n    return { headers }\n  })\n\n  return forward(operation)\n})\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message)\n\n      if (\n        message === 'UNAUTHENTICATED' ||\n        message === 'Your session expired. Sign in again.'\n      ) {\n        signOut(client)\n      }\n    })\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError)\n\n    if (networkError.statusCode === 401) {\n      signOut(client)\n    } else {\n      localStorage.removeItem('token')\n      client.resetStore()\n    }\n  }\n})\n\nconst link = ApolloLink.from([authLink, errorLink, terminatingLink])\n\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({\n  link,\n  cache,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}