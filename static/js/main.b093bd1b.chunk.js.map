{"version":3,"sources":["constants/routes.js","constants/history.js","components/SignOut/index.js","components/Navigation/index.js","components/Faculty/Faculties/FacultyList/Table.js","components/Faculty/Faculties/FacultyList/queries.js","components/Faculty/Faculties/FacultyList/index.js","components/Faculty/Faculties/queries.js","components/Faculty/Faculties/index.js","components/Landing/index.js","components/Error/index.js","components/SignIn/queries.js","components/SignIn/index.js","components/Account/queries.js","components/Account/Table.js","components/Session/queries.js","components/Account/index.js","components/Session/withAuthorization.js","components/App/index.js","components/Session/withSession.js","index.js"],"names":["LANDING","createHistory","basename","signOut","client","localStorage","removeItem","resetStore","history","push","SignOutButton","react_default","a","createElement","react_apollo_esm","DropdownItem","onClick","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","color","light","expand","NavbarBrand","Link","to","NavbarToggler","Collapse","navbar","Nav","className","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","session","me","role","react","divider","SignOut","Component","TableComponent","_ref","faculty","Badge","pill","name","counter","Table","responsive","hover","departments","map","department","index","key","id","scope","keys","concat","toUpperCase","slice","FACULTY_UPDATED","gql","_templateObject","FacultyList","subscribeToMore","document","queries","updateQuery","previousResult","subscriptionData","data","facultyUpdated","objectSpread","faculties","edges","toConsumableArray","_","uniqBy","FacultyList_Table","GET_PAGINATED_FACULTIES_WITH_DEPARTMENTS","queries_templateObject","MoreFacultiesButton","_ref3","limit","pageInfo","fetchMore","children","Button","variables","cursor","endCursor","_ref4","fetchMoreResult","Faculties","Jumbotron","query","_ref2","loading","error","Spinner","FacultyList_FacultyList","hasNextPage","Faculties_MoreFacultiesButton","Landing","Faculty_Faculties","ErrorMessage","message","SIGN_IN","SignIn_queries_templateObject","INITIAL_STATE","login","password","SignInForm","onChange","event","_event$target","target","value","defineProperty","onSubmit","signIn","then","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setItem","token","refetch","routes","stop","_x","apply","arguments","preventDefault","_this2","_this$state","isInvalid","length","isEmail","mutation","Form","Row","form","Col","md","lg","size","offset","FormGroup","Label","for","Input","type","placeholder","disabled","Error","withRouter","SignIn_SignInForm","GET_FACULTY","Account_queries_templateObject","DOWN_PLACE","_templateObject2","INCREMENT_COUNTER","_templateObject3","incrementCounter","upPlaceMutation","downPlace","_callee2","downPlaceMutation","_context2","abrupt","sent","_x2","_x3","_x4","facultyId","index_es","attribute","_ref5","GET_ME","Session_queries_templateObject","withAuthorization","conditionFn","networkStatus","Redirect","Account_Table_TableComponent","withSession","assign","Router","Navigation_Navigation","Route","exact","path","component","components_Landing","SignIn","components_Account","httpLink","HttpLink","uri","process","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","_getMainDefinition","getMainDefinition","kind","operation","authLink","ApolloLink","forward","setContext","_ref2$headers","headers","getItem","x-token","errorLink","onError","graphQLErrors","networkError","forEach","locations","console","log","statusCode","link","from","cache","InMemoryCache","ApolloClient","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.b093bd1b.chunk.js","sourcesContent":["export const LANDING = '/'\nexport const SIGN_IN = '/login'\nexport const ACCOUNT = '/account'\n","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory({ basename: '/upis' })\n","import React from 'react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { DropdownItem } from 'reactstrap'\n\nimport * as routes from '../../constants/routes'\nimport history from '../../constants/history'\n\nconst SignOutButton = () => (\n  <ApolloConsumer>\n    {client => (\n      <DropdownItem onClick={() => signOut(client)}>\n        Sign Out\n      </DropdownItem>\n    )}\n  </ApolloConsumer>\n)\n\nconst signOut = client => {\n  localStorage.removeItem('token')\n  client.resetStore()\n  history.push(routes.SIGN_IN)\n}\n\nexport { signOut }\n\nexport default SignOutButton\n","import React, { Component, Fragment } from 'react'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\n\nimport SignOut from '../SignOut'\nimport { Link } from 'react-router-dom'\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>\n            <Link to=\"/\">upis</Link>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret />\n                <DropdownMenu right>\n                  <DropdownItem>\n                    <Link to=\"/\">Faculties</Link>\n                  </DropdownItem>\n\n                  {this.props.session &&\n                  this.props.session.me &&\n                  this.props.session.me.role === 'ADMIN' ? (\n                    <Fragment>\n                      <DropdownItem>\n                        <Link to=\"/account\">Profile</Link>\n                      </DropdownItem>\n\n                      <DropdownItem divider />\n                      <DropdownItem>\n                        <SignOut>Log Out</SignOut>\n                      </DropdownItem>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <DropdownItem>\n                        <Link to=\"/login\">Login</Link>\n                      </DropdownItem>\n                    </Fragment>\n                  )}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Badge, Table } from 'reactstrap'\n\nconst TableComponent = ({ faculty }) => (\n  <div>\n    <Badge color=\"primary\" pill>\n      {faculty.name}\n    </Badge>\n    <Badge color=\"danger\" pill>\n      {faculty.counter}\n    </Badge>\n    <Table responsive hover>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Department</th>\n          <th>Total</th>\n          <th>Budget</th>\n          <th>Self-financing</th>\n        </tr>\n      </thead>\n      <tbody>\n        {faculty.departments.map((department, index) => {\n          return (\n            <tr key={department.id}>\n              <th scope=\"row\">{index + 1}</th>\n              {Object.keys(department).map(key => {\n                switch (key) {\n                  case 'name':\n                  case 'total':\n                    return (\n                      <td\n                        key={key}\n                        className={`department${key[0].toUpperCase()}${key.slice(\n                          1,\n                        )}`}\n                      >\n                        {department[key]}\n                      </td>\n                    )\n                  case 'budget':\n                  case 'selfFinancing':\n                    return (\n                      <td\n                        key={key}\n                        className={`department${key[0].toUpperCase()}${key.slice(\n                          1,\n                        )}`}\n                      >\n                        {department[key]}\n                      </td>\n                    )\n                  default:\n                    return ''\n                }\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </Table>\n  </div>\n)\n\nexport default TableComponent\n","import gql from 'graphql-tag'\n\nexport const FACULTY_UPDATED = gql`\n  subscription {\n    facultyUpdated {\n      faculty {\n        id\n        name\n        counter\n        createdAt\n        departments {\n          id\n          name\n          total\n          budget\n          selfFinancing\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport _ from 'lodash'\n\nimport Table from './Table'\nimport * as queries from './queries'\n\nexport default class FacultyList extends Component {\n  subscribeToMore = () => {\n    this.props.subscribeToMore({\n      document: queries.FACULTY_UPDATED,\n      updateQuery: (previousResult, { subscriptionData }) => {\n        if (!subscriptionData.data) {\n          return previousResult\n        }\n\n        const { facultyUpdated } = subscriptionData.data\n\n        return {\n          ...previousResult,\n          faculties: {\n            ...previousResult.faculties,\n            edges: [\n              facultyUpdated.faculty,\n              ...previousResult.faculties.edges,\n            ],\n          },\n        }\n      },\n    })\n  }\n\n  componentDidMount() {\n    this.subscribeToMore()\n  }\n\n  render() {\n    const { faculties } = this.props\n\n    let uniqueFaculties = _.uniqBy(faculties, 'id')\n\n    return uniqueFaculties.map(faculty => (\n      <Table key={faculty.id} faculty={faculty} />\n    ))\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_PAGINATED_FACULTIES_WITH_DEPARTMENTS = gql`\n  query($cursor: String, $limit: Int!) {\n    faculties(cursor: $cursor, limit: $limit) {\n      edges {\n        id\n        name\n        counter\n        createdAt\n        departments {\n          id\n          name\n          total\n          budget\n          selfFinancing\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Jumbotron, Spinner, Button } from 'reactstrap'\nimport { Query } from 'react-apollo'\n\nimport FacultyList from './FacultyList'\nimport * as queries from './queries'\n\nconst Faculties = ({ limit }) => (\n  <div>\n    <Jumbotron>\n      <Query\n        query={queries.GET_PAGINATED_FACULTIES_WITH_DEPARTMENTS}\n        variables={{ limit }}\n      >\n        {({ data, loading, error, fetchMore, subscribeToMore }) => {\n          if (!data) {\n            return <div>There are no faculties...</div>\n          }\n\n          const { faculties } = data\n\n          if (loading || !faculties) {\n            return (\n              <div>\n                <Spinner color=\"primary\" />\n              </div>\n            )\n          }\n\n          const { edges, pageInfo } = faculties\n\n          return (\n            <Fragment>\n              <FacultyList\n                faculties={edges}\n                subscribeToMore={subscribeToMore}\n              />\n\n              {pageInfo.hasNextPage && (\n                <MoreFacultiesButton\n                  limit={limit}\n                  pageInfo={pageInfo}\n                  fetchMore={fetchMore}\n                >\n                  More\n                </MoreFacultiesButton>\n              )}\n            </Fragment>\n          )\n        }}\n      </Query>\n    </Jumbotron>\n  </div>\n)\n\nconst MoreFacultiesButton = ({\n  limit,\n  pageInfo,\n  fetchMore,\n  children,\n}) => (\n  <Button\n    color=\"secondary\"\n    onClick={() =>\n      fetchMore({\n        variables: { cursor: pageInfo.endCursor, limit },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return previousResult\n          }\n\n          return {\n            faculties: {\n              ...fetchMoreResult.faculties,\n              edges: [\n                ...previousResult.faculties.edges,\n                ...fetchMoreResult.faculties.edges,\n              ],\n            },\n          }\n        },\n      })\n    }\n  >\n    {children}\n  </Button>\n)\n\nexport default Faculties\n","import React from 'react'\n\nimport { Faculties } from '../Faculty'\n\nconst Landing = () => (\n  <div>\n    <Faculties limit={2} />\n  </div>\n)\n\nexport default Landing\n","import React from 'react'\n\nconst ErrorMessage = ({ error }) => (\n  <div>\n    <small>{error.message}</small>\n  </div>\n)\n\nexport default ErrorMessage\n","import gql from 'graphql-tag'\n\nexport const SIGN_IN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Mutation } from 'react-apollo'\nimport { isEmail } from 'validator'\n\nimport * as routes from '../../constants/routes'\nimport ErrorMessage from '../Error'\n\nimport {\n  Jumbotron,\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap'\n\nimport * as queries from './queries'\n\nconst SignInPage = ({ history, refetch }) => (\n  <div>\n    <Jumbotron>\n      <h1 className=\"display-3 text-center\">Login</h1>\n      <SignInForm history={history} refetch={refetch} />\n    </Jumbotron>\n  </div>\n)\n\nconst INITIAL_STATE = {\n  login: '',\n  password: '',\n}\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE }\n\n  onChange = event => {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  onSubmit = (event, signIn) => {\n    signIn().then(async ({ data }) => {\n      this.setState({ ...INITIAL_STATE })\n\n      localStorage.setItem('token', data.signIn.token)\n\n      await this.props.refetch()\n\n      this.props.history.push(routes.LANDING)\n    })\n\n    event.preventDefault()\n  }\n\n  render() {\n    const { login, password } = this.state\n\n    const isInvalid = password.length < 7 || !isEmail(login)\n\n    return (\n      <Mutation\n        mutation={queries.SIGN_IN}\n        variables={{ login, password }}\n      >\n        {(signIn, { data, loading, error }) => (\n          <Form onSubmit={event => this.onSubmit(event, signIn)}>\n            <Row form>\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <FormGroup>\n                  <Label for=\"userEmail\">Email</Label>\n                  <Input\n                    name=\"login\"\n                    value={login}\n                    onChange={this.onChange}\n                    type=\"email\"\n                    id=\"userEmail\"\n                    placeholder=\"Email or Username\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <Label for=\"userPassword\">Password</Label>\n                <Input\n                  name=\"password\"\n                  value={password}\n                  onChange={this.onChange}\n                  type=\"password\"\n                  id=\"userPassword\"\n                  placeholder=\"Password\"\n                />\n              </Col>\n\n              <Col md={6} lg={{ size: 3, offset: 2 }}>\n                <p className=\"lead\">\n                  <Button\n                    disabled={isInvalid || loading}\n                    type=\"submit\"\n                  >\n                    Sign In\n                  </Button>\n                </p>\n              </Col>\n              {error && <ErrorMessage error={error} />}\n            </Row>\n          </Form>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default withRouter(SignInPage)\n\nexport { SignInForm }\n","import gql from 'graphql-tag'\n\nexport const GET_FACULTY = gql`\n  query($id: ID!) {\n    faculty(id: $id) {\n      id\n      name\n      counter\n      departments {\n        id\n        name\n        total\n        budget\n        selfFinancing\n      }\n    }\n  }\n`\n\n/* export const UP_PLACE = gql`\n  mutation($id: ID!, $attribute: String!, $facultyId: ID!) {\n    upPlace(id: $id, attribute: $attribute, facultyId: $facultyId) {\n      id\n      name\n      total\n      budget\n      selfFinancing\n    }\n  }\n` */\n\nexport const DOWN_PLACE = gql`\n  mutation($id: ID!, $attribute: String!, $facultyId: ID!) {\n    downPlace(id: $id, attribute: $attribute, facultyId: $facultyId) {\n      id\n      name\n      total\n      budget\n      selfFinancing\n    }\n  }\n`\n\nexport const INCREMENT_COUNTER = gql`\n  mutation($facultyId: ID!) {\n    incrementCounter(facultyId: $facultyId) {\n      id\n      name\n      counter\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { Badge, Table } from 'reactstrap'\nimport { Mutation } from 'react-apollo'\n\nimport { ArrowDropUp, ArrowDropDown } from '@material-ui/icons'\n\nimport * as queries from './queries'\n\nexport default class TableComponent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      counter: this.props.faculty.counter,\n      departments: [...this.props.faculty.departments],\n    }\n  }\n\n  incrementCounter = async upPlaceMutation => {\n    await upPlaceMutation()\n\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  downPlace = async (index, key, downPlaceMutation) => {\n    const { departments } = this.state\n    if (departments[index][key] <= 0) return\n\n    const { data } = await downPlaceMutation()\n    const { downPlace } = data\n\n    departments[index] = { ...downPlace }\n\n    this.setState({ departments, counter: this.state.counter + 1 })\n  }\n\n  render() {\n    return (\n      <div>\n        <Badge color=\"primary\" pill>\n          {this.props.faculty.name}\n        </Badge>\n        <Badge color=\"danger\" pill>\n          {this.state.counter}{' '}\n          {this.props.session.me ? (\n            <Mutation\n              mutation={queries.INCREMENT_COUNTER}\n              variables={{\n                facultyId: this.props.faculty.id,\n              }}\n            >\n              {(upPlaceMutation, { data, loading, error }) => (\n                <ArrowDropUp\n                  onClick={() =>\n                    this.incrementCounter(upPlaceMutation)\n                  }\n                />\n              )}\n            </Mutation>\n          ) : (\n            ''\n          )}\n        </Badge>\n        <Table responsive hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Department</th>\n              <th>Total</th>\n              <th>Budget</th>\n              <th>Self-financing</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.faculty.departments.map(\n              (department, index) => {\n                return (\n                  <tr key={department.id}>\n                    <th scope=\"row\">{index + 1}</th>\n                    {Object.keys(department).map(key => {\n                      switch (key) {\n                        case 'name':\n                        case 'total':\n                          return (\n                            <td\n                              key={key}\n                              className={`department${key[0].toUpperCase()}${key.slice(\n                                1,\n                              )}`}\n                            >\n                              {this.state.departments[index][key]}\n                            </td>\n                          )\n                        case 'budget':\n                        case 'selfFinancing':\n                          return (\n                            <td\n                              key={key}\n                              className={`department${key[0].toUpperCase()}${key.slice(\n                                1,\n                              )}`}\n                            >\n                              {/*                               {this.props.session &&\n                              this.props.session.me ? (\n                                <Mutation\n                                  mutation={queries.UP_PLACE}\n                                  variables={{\n                                    id: department.id,\n                                    attribute: key,\n                                    facultyId: this.props.faculty.id,\n                                  }}\n                                >\n                                  {(\n                                    upPlaceMutation,\n                                    { data, loading, error },\n                                  ) => (\n                                    <ArrowDropUp\n                                      onClick={() =>\n                                        this.upPlace(\n                                          index,\n                                          upPlaceMutation,\n                                        )\n                                      }\n                                    />\n                                  )}\n                                </Mutation>\n                              ) : (\n                                ''\n                              )} */}\n\n                              {this.state.departments[index][key]}\n\n                              {this.props.session &&\n                              this.props.session.me ? (\n                                <Mutation\n                                  mutation={queries.DOWN_PLACE}\n                                  variables={{\n                                    id: department.id,\n                                    attribute: key,\n                                    facultyId: this.props.faculty.id,\n                                  }}\n                                >\n                                  {(\n                                    downPlaceMutation,\n                                    { data, loading, error },\n                                  ) => (\n                                    <ArrowDropDown\n                                      onClick={() =>\n                                        this.downPlace(\n                                          index,\n                                          key,\n                                          downPlaceMutation,\n                                        )\n                                      }\n                                    />\n                                  )}\n                                </Mutation>\n                              ) : (\n                                ''\n                              )}\n                            </td>\n                          )\n                        default:\n                          return ''\n                      }\n                    })}\n                  </tr>\n                )\n              },\n            )}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n","import gql from 'graphql-tag'\n\nexport const GET_ME = gql`\n  {\n    me {\n      id\n      username\n      email\n      role\n      faculty {\n        id\n      }\n    }\n  }\n`\n","import React, { Fragment } from 'react'\nimport { Spinner } from 'reactstrap'\nimport { Query } from 'react-apollo'\n\nimport Table from './Table'\nimport * as queries from './queries'\n\nimport withAuthorization from '../Session/withAuthorization'\n\nconst Account = ({ session }) => (\n  <div>\n    <Query\n      query={queries.GET_FACULTY}\n      variables={{ id: session.me.faculty.id }}\n    >\n      {({ data, loading }) => {\n        const { faculty } = data\n\n        if (loading || !faculty) {\n          return (\n            <div>\n              <Spinner color=\"primary\" />\n            </div>\n          )\n        }\n\n        return (\n          <Fragment>\n            <Table\n              key={faculty.id}\n              session={session}\n              faculty={faculty}\n            />\n          </Fragment>\n        )\n      }}\n    </Query>\n  </div>\n)\n\nexport default withAuthorization(\n  session => session.me && session.me.role === 'ADMIN',\n)(Account)\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { Redirect } from 'react-router-dom'\n\nimport * as routes from '../../constants/routes'\nimport { GET_ME } from './queries'\n\nconst withAuthorization = conditionFn => Component => props => (\n  <Query query={GET_ME}>\n    {({ data, networkStatus }) => {\n      if (networkStatus < 7) {\n        return null\n      }\n\n      return conditionFn(data) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={routes.SIGN_IN} />\n      )\n    }}\n  </Query>\n)\n\nexport default withAuthorization\n","import React from 'react'\nimport { Route, Router } from 'react-router-dom'\n\nimport Navigation from '../Navigation'\nimport LandingPage from '../Landing'\nimport SignInPage from '../SignIn'\nimport AccountPage from '../Account'\nimport withSession from '../Session/withSession'\n\nimport * as routes from '../../constants/routes'\nimport history from '../../constants/history'\n\nconst App = ({ session, refetch }) => (\n  <Router history={history}>\n    <div>\n      <Navigation session={session} />\n\n      <hr />\n\n      <Route\n        exact\n        path={routes.LANDING}\n        component={() => <LandingPage />}\n      />\n      <Route\n        exact\n        path={routes.SIGN_IN}\n        component={() => <SignInPage refetch={refetch} />}\n      />\n      <Route\n        exact\n        path={routes.ACCOUNT}\n        component={() => <AccountPage session={session} />}\n      />\n    </div>\n  </Router>\n)\n\nexport default withSession(App)\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { GET_ME } from './queries'\n\nconst withSession = Component => props => (\n  <Query query={GET_ME}>\n    {({ data, refetch }) => (\n      <Component {...props} session={data} refetch={refetch} />\n    )}\n  </Query>\n)\n\nexport default withSession\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { getMainDefinition } from 'apollo-utilities'\nimport { ApolloLink, split } from 'apollo-link'\nimport { HttpLink } from 'apollo-link-http'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { onError } from 'apollo-link-error'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './components/App'\nimport { signOut } from './components/SignOut'\n\nconst httpLink = new HttpLink({\n  uri:\n    process.env.REACT_APP_DEVSERVER ||\n    'https://upis.herokuapp.com/graphql',\n})\n\nconst wsLink = new WebSocketLink({\n  uri: process.env.REACT_APP_WS || `wss://upis.herokuapp.com/graphql`,\n  options: {\n    reconnect: true,\n  },\n})\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return (\n      kind === 'OperationDefinition' && operation === 'subscription'\n    )\n  },\n  wsLink,\n  httpLink,\n)\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => {\n    const token = localStorage.getItem('token')\n\n    if (token) {\n      headers = { ...headers, 'x-token': token }\n    }\n\n    return { headers }\n  })\n\n  return forward(operation)\n})\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log('GraphQL error', message)\n\n      if (\n        message === 'UNAUTHENTICATED' ||\n        message === 'Your session expired. Sign in again.'\n      ) {\n        signOut(client)\n      }\n    })\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError)\n\n    if (networkError.statusCode === 401) {\n      signOut(client)\n    }\n  }\n})\n\nconst link = ApolloLink.from([authLink, errorLink, terminatingLink])\n\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({\n  link,\n  cache,\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}